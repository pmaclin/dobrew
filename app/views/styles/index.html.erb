<div class="page-header">
<div class="row">
  <h1>
    Beer Styles
    <%# if current_user.email == "p1@example.com" %>
      <%#= link_to icon('plus'), new_style_path, class: "btn btn-lg btn-success" %>
    <%# end %>
  </h1>
  <h5>
    The BJCP style guidelines currently recognize <%= Style.count %> different, distinct, individual and judgeable styles of beer (ales and lagers). Check out the flavor profiles of some of the more popular and widely distributed brands we've included here.  Brewers, use this as your inspiration when planning the 'perfect' recipe.
  </h5>
  </div>
</div>

<!-- Search Div Top -->
<!-- <div class="row">
  <div class="col-xs-12">
    <input type="text" id="quicksearch" placeholder="Search Beer Styles (start typing)" class="form-control">
  </div>
</div> -->

<!-- Div Paginate Top -->
<!-- <div class="row">
  <div class="col-xs-12  text-center">
  <%#= paginate(@styles) %>
  </div>
</div> -->

<div class="container">
  <div class="panel panel-default">
    <div class="panel-heading"></div>
      <div class="row isotope-container">
        <div class="col-xs-12">

            <table class="table" align="left">
              <thead>
                  <tr><b>
                      <th>Name</th>
                      <th>ID#</th>
                      <th>Example</th>
                      <th>Flavor Profile</th>
                      <th>More</th>
                  </tr></b>
              </thead>

              <tbody>
                <div class="row container">
                  <% @styles.each do |style| %>
                      <tr>
                        <td><%= style.name %></td>
                        <td><%= style.id %></td>
                        <td><%= image_tag style.com_ex_image, :height => '100px', :width => '100px', :class => "img-circle"  %></td>
                        <td width="50%"><font size="3px"><%= style.std_flavor_profile.truncate(120, omission: '...')  %></font></td>
                        <td width="5%">
                          <div class="btn-group btn-group-justified">
                                <%= link_to icon('search-plus'), style, class: "btn btn-primary" %>
                          </div></td>
                        <td width="5%">
                        <%# if current_user.email == "philmaclin@gmail.com" %>
                            <%#= link_to icon('trash-o'), @style, method: :destroy, data: { confirm: "Do you really want to delete this style?" }, class: "btn btn-danger" %>
                            <%# else %>
                        <%# end %>
                        </td>
                      </tr>
                  <% end %>
                </div> <!-- end div container -->
              </tbody>
            </table>

        </div> <!-- div col xs 12 -->
      </div> <!-- div row isotope container-->
  </div> <!-- div panel panel-default -->
</div> <!-- end div container -->


<!-- JavaScript for Isotope layout and quicksearch -->
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery.imagesloaded/3.1.8/imagesloaded.pkgd.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery.isotope/2.0.0/isotope.pkgd.min.js"></script>
<script>
  $(function() {
    // quick search regex
    var qsRegex;

    // init Isotope
    var $container = $('.isotope-container');

    $container.imagesLoaded(function() {
      $container.isotope({
        itemSelector: '.isotope-item',
        layoutMode: 'masonry',
        filter: function() {
          return qsRegex ? $(this).text().match( qsRegex ) : true;
        }
      })
    });

    // use value of search field to filter
    var $quicksearch = $('#quicksearch').keyup( debounce( function() {
      qsRegex = new RegExp( $quicksearch.val(), 'gi' );
      $container.isotope();
    }, 200 ) );

  });

  // debounce so filtering doesn't happen every millisecond
  function debounce( fn, threshold ) {
    var timeout;
    return function debounced() {
      if ( timeout ) {
        clearTimeout( timeout );
      }
      function delayed() {
        fn();
        timeout = null;
      }
      timeout = setTimeout( delayed, threshold || 100 );
    }
  }
</script>

<!-- End responsive, Isotope-based layout example -->
